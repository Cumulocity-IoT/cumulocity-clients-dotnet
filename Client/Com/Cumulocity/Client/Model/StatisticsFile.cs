///
/// StatisticsFile.cs
/// CumulocityCoreLibrary
///
/// Copyright (c) 2014-2022 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.
/// Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Software AG.
///

using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Runtime.Serialization;

namespace Com.Cumulocity.Client.Model 
{
	/// <summary>
	/// Statistics file metadata.
	/// </summary>
	public class StatisticsFile 
	{
	
		/// <summary>
		/// Unique identifier of the file.
		/// </summary>
		[JsonPropertyName("id")]
		public string? Id { get; set; }
	
		/// <summary>
		/// Domain name where the statistics file come from.
		/// </summary>
		[JsonPropertyName("instanceName")]
		public string? InstanceName { get; set; }
	
		/// <summary>
		/// File generation date.
		/// </summary>
		[JsonPropertyName("generationDate")]
		public System.DateTime? GenerationDate { get; set; }
	
		/// <summary>
		/// Start date or date and time of the statistics attached in the file.
		/// </summary>
		[JsonPropertyName("dateFrom")]
		public System.DateTime? DateFrom { get; set; }
	
		/// <summary>
		/// End date or date and time of the statistics attached in the file.
		/// </summary>
		[JsonPropertyName("dateTo")]
		public System.DateTime? DateTo { get; set; }
	
		/// <summary>
		/// The type of statistics:
		/// * REAL - generated by the system on the first day of the month and including statistics from the previous month.
		/// * TEST - generated by the user with a time range specified in the query parameters (`dateFrom`, `dateTo`).
		/// 
		/// </summary>
		[JsonPropertyName("type")]
		public Type? PType { get; set; }
	
		/// <summary>
		/// The type of statistics:
		/// * REAL - generated by the system on the first day of the month and including statistics from the previous month.
		/// * TEST - generated by the user with a time range specified in the query parameters (`dateFrom`, `dateTo`).
		/// 
		/// [REAL, TEST]
		/// </summary>
		[JsonConverter(typeof(JsonStringEnumConverter))]
		public enum Type 
		{
			[EnumMember(Value = "REAL")]
			REAL,
			[EnumMember(Value = "TEST")]
			TEST
		}
	
	
		public override string ToString()
		{
			return JsonSerializer.Serialize(this);
		}
	}
}
